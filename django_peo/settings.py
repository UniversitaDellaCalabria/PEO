"""
Django settings for django_peo project.

Generated by 'django-admin startproject' using Django 2.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import datetime

from . settingslocal import *

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# used for pdf creation and other temporary files
CACHE_DIR='django_peo_cache'
TMP_DIR = os.path.sep.join((BASE_DIR, CACHE_DIR, 'tmp'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = settingslocal.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = settingslocal.DEBUG
CACHED = False

# Se in manutenzione solo gli utenti is_staff potranno accedervi
# MANTEINANCE = settingslocal.MANTEINANCE
# PRODUCTION = settingslocal.PRODUCTION

# installazione da sorgenti o da repository DEV per eludere bug not headless
# WKHTMLTOPDF_CMD = '/usr/local/bin/wkhtmltopdf'

# Application definition
INSTALLED_APPS = [
    # customizzazione gestione degli utenti
    'unical_accounts',

    'adminactions',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',

    # attivo solo se DEBUG = True
    'django.contrib.staticfiles',

    # 'django_countries',
    'advanced_filters',
    'django_admin_multiple_choice_list_filter',

    # external libs
    'nested_admin',
    'rangefilter',

    # our apps
    'unical_template',

    # oracle dblink for cineca CSA if CSA_MODE == CSA_NATIVE
    # if CSA_MODE == CSA_REPLICA data will be copied in default DB
    'csa',

    # Django Form Builder
    'django_form_builder',

    # se un giorno dovessimo interrompere con cineca qui la gestione delle strutture/sedi
    # 'unical_strutture',

    'gestione_risorse_umane',
    'gestione_peo',

    # inserimenti dipendenti domanda peo
    'domande_peo',

    # Libreria per la generazione dei PDF
    'wkhtmltopdf',

    # SAML2 SP
    'djangosaml2',
    'saml2_sp',

    # protocollo webservice in uso
    # ogni università dovrebbe interfacciare il proprio
    # 'protocollo_ws',
    ]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_peo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_peo.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases
# DATABASES = settingslocal.DATABASES

AUTH_USER_MODEL = 'unical_accounts.User'

# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# csa_sync uses this cache
if CACHED:
    # CACHES = {
        # 'default': {
            # 'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
            # 'LOCATION': '127.0.0.1:11211',
        # }
    # }

    CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '{}/{}'.format(BASE_DIR, CACHE_DIR),
        # due giornate, utilizzato esclusivamente per dati csa
        #'TIMEOUT': 43200, # mezzagiornata
        'TIMEOUT': (60 ** 2 ) * 48,
        'OPTIONS': {
            'MAX_ENTRIES': 4200
        }
    }
}
else:
    CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.dummy.DummyCache',
        }
    }

# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/
LANGUAGE_CODE = 'it-it'
TIME_ZONE = 'Europe/Rome'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# https://docs.djangoproject.com/en/dev/ref/settings/#date-format
DATETIME_FORMAT = 'N j, Y, P'
STRFTIME_DATE_FORMAT = '%d/%m/%Y'
STRFTIME_DATETIME_FORMAT = '{} %H/%M'.format(STRFTIME_DATE_FORMAT)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
DATA_DIR = os.path.join(BASE_DIR, "data")

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(DATA_DIR, 'static')

MEDIA_ROOT = os.path.join(DATA_DIR, 'media')
MEDIA_URL = '/media/'

DOMANDE_PEO_FOLDER = 'domande_peo'

# crea un bug circolare esclusivamente in produzione, in development non emerge!
#HOME_PAGE = 'risorse_umane:dashboard'
HOME_PAGE = '/'

# 2.5MB - 2621440
# 5MB - 5242880
# 10MB - 10485760
# 20MB - 20971520
# 50MB - 5242880
# 100MB 104857600
# 250MB - 214958080
# 500MB - 429916160
MAX_UPLOAD_SIZE = 10485760
PERMITTED_UPLOAD_FILETYPE = ('application/pdf',)

# maximum permitted filename lengh in attachments, uploads
ATTACH_NAME_MAX_LEN = 50

# IMAGE UPLOAD LIMIT
IMG_MAX_UPLOAD_SIZE = 10485760
IMG_PERMITTED_UPLOAD_FILETYPE = ("image/jpeg", "image/png",
                                 "image/gif", "image/x-ms-bmp")

# PERMITTED INPUT DATE FORMATS
# Questi formati sono utilizzati dai campi DateField del customform
# e specificano gli unici formati accettati!
DEFAULT_DATE_INPUT_FORMAT = '%d/%m/%Y'
DATE_INPUT_FORMATS  = (DEFAULT_DATE_INPUT_FORMAT,
                       '%d/%m/%y', '%Y/%m/%d',
                       '%d-%m-%Y', '%Y-%m-%d')

# ADMINS = settingslocal.ADMINS

# DEFAULT_FROM_EMAIL = settingslocal.DEFAULT_FROM_EMAIL
SERVER_EMAIL = DEFAULT_FROM_EMAIL
# EMAIL_HOST = settingslocal.EMAIL_HOST
# EMAIL_PORT = settingslocal.EMAIL_PORT
# EMAIL_USE_TLS = settingslocal.EMAIL_USE_TLS

# LOGGING = settingslocal.LOGGING

# quale classe utilizzare per instanziare un oggetto, può dunque essere customizzato
CLASSE_PROTOCOLLO = 'protocollo_ws.protocollo'

# CSA conf
# see settingslocal.py

# DjangoSAML2 conf
if 'djangosaml2'  in INSTALLED_APPS:
    # from . import sp_pysaml2
    from . import sp_pysaml2_shibidp as sp_pysaml2

    # pySAML2 SP mandatory
    # SESSION_EXPIRE_AT_BROWSER_CLOSE=True

    AUTHENTICATION_BACKENDS = (
        'django.contrib.auth.backends.ModelBackend',
        'djangosaml2.backends.Saml2Backend',
    )

    LOGIN_URL = '/saml2/login/'
    LOGOUT_URL = '/logout/'
    LOGIN_REDIRECT_URL = '/'
    LOGOUT_REDIRECT_URL = '/'

    BASE_URL = sp_pysaml2.BASE_URL

    # OR NAME_ID or MAIN_ATTRIBUTE (not together!)
    # SAML_USE_NAME_ID_AS_USERNAME = sp_pysaml2.SAML_USE_NAME_ID_AS_USERNAME
    SAML_DJANGO_USER_MAIN_ATTRIBUTE = sp_pysaml2.SAML_DJANGO_USER_MAIN_ATTRIBUTE
    SAML_DJANGO_USER_MAIN_ATTRIBUTE_LOOKUP = sp_pysaml2.SAML_DJANGO_USER_MAIN_ATTRIBUTE_LOOKUP

    SAML_CREATE_UNKNOWN_USER = sp_pysaml2.SAML_CREATE_UNKNOWN_USER
    SAML_CONFIG = sp_pysaml2.SAML_CONFIG
    SAML_ATTRIBUTE_MAPPING = sp_pysaml2.SAML_ATTRIBUTE_MAPPING


CUSTOM_WIDGETS = {
    # 'BaseDateField': 'bootstrap_italia_template.widgets.BootstrapItaliaDateWidget',
    # 'BaseDateTimeField': 'bootstrap_italia_template.widgets.BootstrapItaliaTimeWidget',
    # 'CustomSelectBoxField': 'bootstrap_italia_template.widgets.BootstrapItaliaSelectWidget',
    # 'CustomRadioBoxField': 'bootstrap_italia_template.widgets.BootstrapItaliaRadioWidget',
    # 'BaseDateField': 'django.forms.widgets.DateInput',
    # 'DateField': 'django.forms.widgets.DateInput',
    # 'CustomSelectBoxField': 'django.forms.widgets.Select',
    # 'CustomRadioBoxField': 'django.forms.widgets.RadioSelect',
}
